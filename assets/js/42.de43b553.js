(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{263:function(e,t,a){"use strict";a.r(t);var r=a(2),s=Object(r.a)({},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"automatic-repair-of-real-bugs-in-java-a-large-scale-experiment-on-the-defects4j-dataset"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#automatic-repair-of-real-bugs-in-java-a-large-scale-experiment-on-the-defects4j-dataset","aria-hidden":"true"}},[e._v("#")]),e._v(" Automatic repair of real bugs in java: a large-scale experiment on the defects4j dataset")]),e._v(" "),a("p",[e._v("Proceedings of Empirical Software Engineering ("),a("em",[e._v("EMSE")]),e._v(")")]),e._v(" "),e._l(this.$page.frontmatter.authors,function(e){return a("Author",{key:e.lastname,attrs:{lastname:e.lastname,firstname:e.firstname,url:e.url}})}),e._v(" "),e._v(" "),a("p",[a("a",{attrs:{href:"http://link.springer.com/article/10.1007/s10664-016-9470-4",target:"_blank",rel:"noopener noreferrer"}},[e._v("PDF"),a("OutboundLink")],1),e._v(" • "),a("a",{attrs:{href:"https://doi.org/10.1007/s10664-016-9470-4",target:"_blank",rel:"noopener noreferrer"}},[e._v("DOI"),a("OutboundLink")],1),e._v(" • "),a("a",{attrs:{href:"https://durieux.me/slide_defects4j_repair.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("Slide"),a("OutboundLink")],1),e._v(" • "),a("a",{attrs:{href:"https://github.com/Spirals-Team/defects4j-repair/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Experiment Results"),a("OutboundLink")],1)]),e._v(" "),a("h2",{attrs:{id:"abstract"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#abstract","aria-hidden":"true"}},[e._v("#")]),e._v(" Abstract")]),e._v(" "),a("p",[e._v("Defects4J is a large, peer-reviewed, structured dataset of real-world Java bugs. Each bug in Defects4J comes with a test suite and at least one failing test case that triggers the bug. In this paper, we report on an experiment to explore the effectiveness of automatic test-suite based repair on Defects4J. The result of our experiment shows that the considered state-of-the-art repair methods can generate patches for 47 out of 224 bugs. However, those patches are only test-suite adequate, which means that they pass the test suite and may potentially be incorrect beyond the test-suite satisfaction correctness criterion. We have manually analyzed 84 different patches to assess their real correctness. In total, 9 real Java bugs can be correctly repaired with test-suite based repair. This analysis shows that test-suite based repair suffers from under-specified bugs, for which trivial or incorrect patches still pass the test suite. With respect to practical applicability, it takes on average 14.8 minutes to find a patch. The experiment was done on a scientific grid, totaling 17.6 days of computation time. All the repair systems and experimental results are publicly available on Github in order to facilitate future research on automatic repair.")]),e._v(" "),a("div",{staticClass:"language-bibtex line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("@article{martinez2016,\nauthor = {Matias Martinez and Thomas Durieux and Romain Sommerard and Jifeng Xuan and Martin Monperrus},\njournal = {Empirical Software Engineering (EMSE)},\npublisher = {Springer},\ntitle = {Automatic Repair of Real Bugs in Java: A Large-Scale Experiment on the Defects4J Dataset},\nyear = {2016}\n}\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br")])])],2)},[],!1,null,null,null);t.default=s.exports}}]);