(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{271:function(e,t,a){"use strict";a.r(t);var r=a(2),s=Object(r.a)({},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"automated-classification-of-overfitting-patches-with-statically-extracted-code-features"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#automated-classification-of-overfitting-patches-with-statically-extracted-code-features","aria-hidden":"true"}},[e._v("#")]),e._v(" Automated Classification of Overfitting Patches with Statically Extracted Code Features")]),e._v(" "),a("p",[e._v("Proceedings of IEEE Transactions on Software Engineering ("),a("em",[e._v("TSE")]),e._v(")")]),e._v(" "),e._l(this.$page.frontmatter.authors,function(e){return a("Author",{key:e.lastname,attrs:{lastname:e.lastname,firstname:e.firstname,url:e.url}})}),e._v(" "),e._v(" "),a("p",[a("a",{attrs:{href:"https://arxiv.org/abs/1910.12057",target:"_blank",rel:"noopener noreferrer"}},[e._v("PDF"),a("OutboundLink")],1),e._v(" • "),a("a",{attrs:{href:"https://doi.org/10.1109/tse.2021.3071750",target:"_blank",rel:"noopener noreferrer"}},[e._v("DOI"),a("OutboundLink")],1),e._v(" • "),a("a",{attrs:{href:"https://github.com/SophieHYe/ODSExperiment",target:"_blank",rel:"noopener noreferrer"}},[e._v("Source code"),a("OutboundLink")],1)]),e._v(" "),a("h2",{attrs:{id:"abstract"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#abstract","aria-hidden":"true"}},[e._v("#")]),e._v(" Abstract")]),e._v(" "),a("p",[e._v("Automatic program repair (APR) aims to reduce the cost of manually fixing defects. However, APR suffers from generating overfitting patches. This paper presents a novel overfitting detection system called ODS. ODS first statically extracts code features from the AST edit script between the generated patch and the buggy program. ODS then automatically learns an ensemble probabilistic model from those features, and the learned model is used to classify and rank new potentially overfitting patches. We conduct a large-scale experiment to evaluate the effectiveness of ODS on classification and ranking based on 713 patches for Defects4J. The empirical evaluation shows that ODS is able to correctly detect 57% of overfitting patches, significantly faster than the related work. ODS is easily applicable, and can be applied as a post-processing procedure to rank the patches generated by any APR systems.")]),e._v(" "),a("div",{staticClass:"language-bibtex line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("@ARTICLE{ods,\nauthor={Ye, He and Gu, Jian and Martinez, Matias and Durieux, Thomas and Monperrus, Martin},\njournal={IEEE Transactions on Software Engineering},\ntitle={Automated Classification of Overfitting Patches with Statically Extracted Code Features},\nyear={2021},\nvolume={},\nnumber={},\npages={1-1},\ndoi={10.1109/TSE.2021.3071750}}\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br")])])],2)},[],!1,null,null,null);t.default=s.exports}}]);