(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{258:function(e,a,t){"use strict";t.r(a);var n=t(2),r=Object(n.a)({},function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"a-large-scale-study-on-human-cloned-changes-for-automated-program-repair"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#a-large-scale-study-on-human-cloned-changes-for-automated-program-repair","aria-hidden":"true"}},[e._v("#")]),e._v(" A large-scale study on human-cloned changes for automated program repair")]),e._v(" "),t("p",[e._v("Proceedings of the 18th International Conference on Mining Software Repositories, Challenge track ("),t("em",[e._v("MSR'21")]),e._v(")")]),e._v(" "),e._l(this.$page.frontmatter.authors,function(e){return t("Author",{key:e.lastname,attrs:{lastname:e.lastname,firstname:e.firstname,url:e.url}})}),e._v(" "),e._v(" "),t("p",[t("a",{attrs:{href:"https://arxiv.org/abs/2104.02386",target:"_blank",rel:"noopener noreferrer"}},[e._v("PDF"),t("OutboundLink")],1),e._v(" • "),t("a",{attrs:{href:"https://doi.org/10.1109/MSR52588.2021.00064",target:"_blank",rel:"noopener noreferrer"}},[e._v("DOI"),t("OutboundLink")],1),e._v(" • "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=vXUDbGdXXyQ",target:"_blank",rel:"noopener noreferrer"}},[e._v("Video"),t("OutboundLink")],1),e._v(" • "),t("a",{attrs:{href:"https://github.com/software-bugs/change-clone",target:"_blank",rel:"noopener noreferrer"}},[e._v("Experiment Results"),t("OutboundLink")],1)]),e._v(" "),t("h2",{attrs:{id:"abstract"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#abstract","aria-hidden":"true"}},[e._v("#")]),e._v(" Abstract")]),e._v(" "),t("p",[e._v("Research in automatic program repair has shown that real bugs can be automatically fixed. However, there are several challenges involved in such a task that are not yet fully addressed. As an example, consider that a test-suite-based repair tool performs a change in a program to fix a bug spotted by a failing test case, but then the same or another test case fails. This could mean that the change is a partial fix for the bug or that another bug was manifested. However, the repair tool discards the change and possibly performs other repair attempts. One might wonder if the applied change should be also applied in other locations in the program so that the bug is fully fixed. In this paper, we are interested in investigating the extent of bug fix changes being cloned by developers within patches. Our goal is to investigate the need of multi-location repair by using identical or similar changes in identical or similar contexts. To do so, we analyzed 3,049 multi-hunk patches from the ManySStuBs4J dataset, which is a large dataset of single statement bug fix changes. We found out that 68% of the multi-hunk patches contain at least one change clone group. Moreover, most of these patches (70%) are strictly-cloned ones, which are patches fully composed of changes belonging to one single change clone group. Finally, most of the strictly-cloned patches (89%) contain change clones with identical changes, independently of their contexts. We conclude that automated solutions for creating patches composed of identical or similar changes can be useful for fixing bugs.")]),e._v(" "),t("div",{staticClass:"language-bibtex line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("@inproceedings{clone_changes,\nauthor = {Fernanda Madeiral and\nThomas Durieux},\ntitle = {A large-scale study on human-cloned changes for automated program\nrepair},\nbooktitle = {18th {IEEE/ACM} International Conference on Mining Software Repositories,\n{MSR} 2021, Madrid, Spain, May 17-19, 2021},\npages = {510--514},\npublisher = {{IEEE}},\nyear = {2021},\nurl = { https://doi.org/10.1109/MSR52588.2021.00064 },\ndoi = {10.1109/MSR52588.2021.00064},\ntimestamp = {Fri, 02 Jul 2021 15:01:28 +0200},\nbiburl = { https://dblp.org/rec/conf/msr/MadeiralD21.bib },\nbibsource = {dblp computer science bibliography,  https://dblp.org }\n}\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br"),t("span",{staticClass:"line-number"},[e._v("16")]),t("br")])])],2)},[],!1,null,null,null);a.default=r.exports}}]);